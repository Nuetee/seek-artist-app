export declare const VaFileUploadListItem: import("vue").DefineComponent<{
    file: {
        type: import("vue").PropType<import("..").ConvertedFile | null>;
        default: null;
    };
    color: {
        type: StringConstructor;
        default: string;
    };
    undo: {
        type: BooleanConstructor;
        default: boolean;
    };
    undoDuration: {
        type: NumberConstructor;
        default: number;
    };
}, {
    removed: import("vue").Ref<boolean>;
    computedClasses: {
        [x: `va-file-upload-list-item--${string}`]: boolean;
    } & {
        readonly asObject: import("vue").ComputedRef<{
            [x: `va-file-upload-list-item--${string}`]: boolean;
        }>;
        readonly asArray: import("vue").ComputedRef<`va-file-upload-list-item--${string}`[]>;
        readonly asString: import("vue").ComputedRef<string>;
    };
    removeFile: () => void;
    recoverFile: () => void;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, "remove"[], "remove", import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    file: {
        type: import("vue").PropType<import("..").ConvertedFile | null>;
        default: null;
    };
    color: {
        type: StringConstructor;
        default: string;
    };
    undo: {
        type: BooleanConstructor;
        default: boolean;
    };
    undoDuration: {
        type: NumberConstructor;
        default: number;
    };
}>> & {
    onRemove?: ((...args: any[]) => any) | undefined;
}, {
    file: import("..").ConvertedFile | null;
    color: string;
    undoDuration: number;
    undo: boolean;
}>;
