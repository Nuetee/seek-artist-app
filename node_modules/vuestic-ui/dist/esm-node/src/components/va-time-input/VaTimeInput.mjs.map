{"version":3,"file":"VaTimeInput.mjs","sources":["../../../../../src/components/va-time-input/VaTimeInput.vue"],"sourcesContent":["<template>\n  <va-dropdown\n    v-model=\"isOpenSync\"\n    class=\"va-time-input\"\n    placement=\"bottom-start\"\n    trigger=\"none\"\n    anchorSelector=\".va-input-wrapper__field\"\n    :class=\"$attrs.class\"\n    :style=\"$attrs.style\"\n    :offset=\"[2, 0]\"\n    :close-on-content-click=\"false\"\n    :stateful=\"false\"\n    :disabled=\"$props.disabled\"\n  >\n    <template #anchor>\n      <va-input-wrapper\n        v-bind=\"computedInputWrapperProps\"\n        @click=\"toggleDropdown\"\n        @keydown.enter.stop=\"toggleDropdown\"\n        @keydown.space.stop=\"toggleDropdown\"\n      >\n        <template #default>\n          <input\n            ref=\"input\"\n            class=\"va-time-input__input\"\n            v-bind=\"inputAttributesComputed\"\n            v-on=\"computedInputListeners\"\n            @change=\"onInputTextChanged\"\n          />\n        </template>\n\n        <template\n          v-for=\"name in filteredSlots\"\n          :key=\"name\"\n          v-slot:[name]=\"slotScope\"\n        >\n          <slot\n            :name=\"name\"\n            v-bind=\"{ ...slotScope, toggleDropdown, showDropdown, hideDropdown, isOpen: isOpenSync, focus }\"\n          />\n        </template>\n\n        <template #prependInner=\"slotScope\">\n          <slot\n            name=\"prependInner\"\n            v-bind=\"{ ...slotScope, toggleDropdown, showDropdown, hideDropdown, isOpen: isOpenSync, focus }\"\n          />\n          <va-icon\n            v-if=\"$props.leftIcon\"\n            role=\"button\"\n            aria-label=\"toggle dropdown\"\n            aria-hidden=\"false\"\n            :tabindex=\"iconTabindexComputed\"\n            v-bind=\"iconProps\"\n            @click.stop=\"showDropdown\"\n            @keydown.enter.stop=\"showDropdown\"\n            @keydown.space.stop=\"showDropdown\"\n          />\n        </template>\n\n        <template #icon>\n          <va-icon\n            v-if=\"canBeClearedComputed\"\n            role=\"button\"\n            aria-label=\"reset time\"\n            aria-hidden=\"false\"\n            :tabindex=\"iconTabindexComputed\"\n            v-bind=\"clearIconProps\"\n            @click.stop=\"reset\"\n            @keydown.enter.stop=\"reset\"\n            @keydown.space.stop=\"reset\"\n          />\n          <va-icon\n            v-else-if=\"!$props.leftIcon\"\n            role=\"button\"\n            class=\"va-dropdown__icons__reset\"\n            aria-label=\"toggle dropdown\"\n            aria-hidden=\"false\"\n            :tabindex=\"iconTabindexComputed\"\n            v-bind=\"iconProps\"\n            @click.stop=\"showDropdown\"\n            @keydown.enter.stop=\"showDropdown\"\n            @keydown.space.stop=\"showDropdown\"\n          />\n        </template>\n      </va-input-wrapper>\n    </template>\n\n    <va-dropdown-content\n      no-padding\n      @keydown.esc.prevent=\"hideDropdown\"\n      @keypress.enter.prevent=\"hideDropdown\"\n    >\n      <va-time-picker\n        ref=\"timePicker\"\n        v-bind=\"timePickerProps\"\n        v-model=\"modelValueSync\"\n      />\n    </va-dropdown-content>\n  </va-dropdown>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, PropType, shallowRef, nextTick } from 'vue'\nimport omit from 'lodash/omit'\n\nimport { extractComponentProps, filterComponentProps } from '../../utils/child-props'\nimport {\n  useSyncProp,\n  useValidation, useValidationEmits, useValidationProps, ValidationProps,\n  useClearable, useClearableEmits, useClearableProps,\n  useFocus, useFocusEmits,\n} from '../../composables'\nimport { useTimeParser } from './hooks/time-text-parser'\nimport { useTimeFormatter } from './hooks/time-text-formatter'\n\nimport VaTimePicker from '../va-time-picker/VaTimePicker.vue'\nimport { VaInputWrapper } from '../va-input'\nimport VaIcon from '../va-icon/VaIcon.vue'\nimport { VaDropdown, VaDropdownContent } from '../va-dropdown'\n\nconst VaInputWrapperProps = extractComponentProps(VaInputWrapper, ['focused', 'maxLength', 'counterValue'])\n\nexport default defineComponent({\n  name: 'VaTimeInput',\n\n  components: { VaDropdown, VaDropdownContent, VaTimePicker, VaIcon, VaInputWrapper },\n\n  emits: [\n    ...useFocusEmits,\n    ...useValidationEmits,\n    ...useClearableEmits,\n    'update:modelValue',\n    'update:isOpen',\n  ],\n\n  props: {\n    ...useClearableProps,\n    ...VaInputWrapperProps,\n    ...extractComponentProps(VaTimePicker),\n    ...useValidationProps as ValidationProps<Date>,\n\n    isOpen: { type: Boolean, default: undefined },\n    modelValue: { type: Date, default: undefined },\n    clearValue: { type: Date, default: undefined },\n    format: { type: Function as PropType<(date?: Date) => string> },\n    parse: { type: Function as PropType<(input: string) => Date> },\n    manualInput: { type: Boolean, default: false },\n    leftIcon: { type: Boolean, default: false },\n    icon: { type: String, default: 'schedule' },\n  },\n\n  inheritAttrs: false,\n\n  setup (props, { emit, slots, attrs }) {\n    const input = shallowRef<HTMLInputElement>()\n    const timePicker = shallowRef<typeof VaTimePicker>()\n\n    const [isOpenSync] = useSyncProp('isOpen', props, emit, false)\n    const [modelValueSync] = useSyncProp('modelValue', props, emit)\n\n    const { parse, isValid } = useTimeParser(props)\n    const { format } = useTimeFormatter(props)\n\n    const valueText = computed<string>(() => format(modelValueSync.value || props.clearValue))\n\n    const { isFocused, focus, blur, onFocus: focusListener, onBlur: blurListener } = useFocus(input)\n\n    const onInputTextChanged = (e: Event) => {\n      const val = (e.target as HTMLInputElement)?.value\n      if (!val) {\n        return reset()\n      }\n\n      const v = parse(val)\n\n      if (isValid.value && v) {\n        modelValueSync.value = v\n      } else {\n        modelValueSync.value = undefined\n        isValid.value = true\n      }\n    }\n\n    // --- not used yet ---\n    // const changePeriod = (isPM: boolean) => {\n    //   if (!modelValueSync.value) { return }\n\n    //   const halfDayPeriod = 12\n    //   const h = modelValueSync.value.getHours()\n\n    //   if (isPM && h <= halfDayPeriod) {\n    //     modelValueSync.value = new Date(modelValueSync.value.setHours(h + halfDayPeriod))\n    //   } else if (!isPM && h >= halfDayPeriod) {\n    //     modelValueSync.value = new Date(modelValueSync.value.setHours(h - halfDayPeriod))\n    //   }\n    // }\n\n    // const changePeriodToPm = () => changePeriod(true)\n    // const changePeriodToAm = () => changePeriod(false)\n\n    const reset = (): void => {\n      emit('update:modelValue', props.clearValue)\n      emit('clear')\n    }\n\n    const { computedError, computedErrorMessages, listeners, validationAriaAttributes } = useValidation(props, emit, reset, focus)\n\n    const {\n      canBeCleared,\n      clearIconProps,\n      onFocus,\n      onBlur,\n    } = useClearable(props, valueText)\n\n    const canBeClearedComputed = computed(() => (\n      canBeCleared.value && valueText.value !== format(props.clearValue)\n    ))\n\n    const iconProps = computed(() => ({\n      name: props.icon,\n      color: props.color,\n      size: 'small',\n    }))\n\n    const computedInputWrapperProps = computed(() => ({\n      ...filterComponentProps(props, VaInputWrapperProps).value,\n      focused: isFocused.value,\n      error: computedError.value,\n      errorMessages: computedErrorMessages.value,\n      readonly: props.readonly || !props.manualInput,\n    }))\n\n    const computedInputListeners = computed(() => ({\n      focus: () => {\n        if (props.disabled) { return }\n\n        focusListener()\n\n        if (props.readonly) { return }\n        onFocus()\n        listeners.onFocus()\n      },\n      blur: () => {\n        if (props.disabled) { return }\n\n        blurListener()\n\n        if (props.readonly) { return }\n        onBlur()\n        listeners.onBlur()\n      },\n    }))\n\n    const filteredSlots = computed(() => {\n      const slotsWithIcons = [\n        props.leftIcon && 'prependInner',\n        (!props.leftIcon || props.clearable) && 'icon',\n      ]\n      return Object.keys(slots).filter(slot => !slotsWithIcons.includes(slot))\n    })\n\n    const hideDropdown = () => {\n      isOpenSync.value = false\n      focus()\n    }\n\n    const focusTimePicker = (): void => {\n      nextTick(() => timePicker.value?.focus())\n    }\n\n    const focusInputOrPicker = () => {\n      isOpenSync.value ? focusTimePicker() : focus()\n    }\n\n    const checkProhibitedDropdownOpening = (e?: KeyboardEvent) => {\n      if (isOpenSync.value) { return false }\n      if (props.disabled || props.readonly) { return true }\n      return props.manualInput && e?.code !== 'Space'\n    }\n\n    const toggleDropdown = (event: Event | KeyboardEvent) => {\n      if (checkProhibitedDropdownOpening(event instanceof KeyboardEvent ? event : undefined)) { return }\n\n      isOpenSync.value = !isOpenSync.value\n      nextTick(focusInputOrPicker)\n    }\n\n    // icon interaction\n    const showDropdown = () => {\n      if (props.disabled || props.readonly) { return }\n\n      isOpenSync.value = true\n      nextTick(focusTimePicker)\n    }\n\n    const iconTabindexComputed = computed(() => props.disabled || props.readonly ? -1 : 0)\n    const inputAttributesComputed = computed(() => ({\n      readonly: props.readonly || !props.manualInput,\n      tabindex: props.disabled ? -1 : 0,\n      value: valueText.value,\n      ariaLabel: props.label || 'selected date',\n      ariaRequired: props.requiredMark,\n      ariaDisabled: props.disabled,\n      ariaReadOnly: props.readonly,\n      ...validationAriaAttributes.value,\n      ...omit(attrs, ['class', 'style']),\n    }))\n\n    return {\n      input,\n      timePicker,\n\n      timePickerProps: filterComponentProps(props, extractComponentProps(VaTimePicker)),\n      computedInputWrapperProps,\n      computedInputListeners,\n      isOpenSync,\n      modelValueSync,\n      valueText,\n      onInputTextChanged,\n      canBeClearedComputed,\n      iconProps,\n      clearIconProps,\n      filteredSlots,\n      inputAttributesComputed,\n      iconTabindexComputed,\n\n      hideDropdown,\n      showDropdown,\n      toggleDropdown,\n\n      reset,\n      focus,\n      blur,\n    }\n  },\n})\n</script>\n"],"names":["VaInputWrapperProps","extractComponentProps","VaInputWrapper","defineComponent","name","components","VaDropdown","VaDropdownContent","VaTimePicker","VaIcon","emits","useFocusEmits","useValidationEmits","useClearableEmits","props","__spreadProps","__spreadValues","useClearableProps","useValidationProps","isOpen","type","Boolean","default","modelValue","Date","clearValue","format","Function","parse","manualInput","leftIcon","icon","String","inheritAttrs","setup","emit","slots","attrs","input","shallowRef","timePicker","isOpenSync","useSyncProp","modelValueSync","isValid","useTimeParser","useTimeFormatter","valueText","computed","value","isFocused","focus","blur","onFocus","focusListener","onBlur","blurListener","useFocus","reset","computedError","computedErrorMessages","listeners","validationAriaAttributes","useValidation","canBeCleared","clearIconProps","useClearable","canBeClearedComputed","iconProps","color","size","computedInputWrapperProps","filterComponentProps","focused","error","errorMessages","readonly","computedInputListeners","disabled","filteredSlots","slotsWithIcons","clearable","Object","keys","filter","includes","slot","focusTimePicker","nextTick","_a","focusInputOrPicker","iconTabindexComputed","inputAttributesComputed","tabindex","ariaLabel","label","ariaRequired","requiredMark","ariaDisabled","ariaReadOnly","omit","timePickerProps","onInputTextChanged","e","val","target","v","hideDropdown","showDropdown","toggleDropdown","event","KeyboardEvent","code","_createBlock","_component_va_dropdown","_ctx","_cache","$event","class","_normalizeClass","$attrs","placement","trigger","anchorSelector","style","_normalizeStyle","offset","stateful","$props","anchor","_withCtx","_createVNode","_component_va_input_wrapper","_mergeProps","onClick","onKeydown","_withKeys","_withModifiers","_createElementVNode","ref","_toHandlers","onChange","args","prependInner","slotScope","_renderSlot","$slots","_normalizeProps","_guardReactiveProps","_component_va_icon","key","role","_openBlock","_renderList","fn","_component_va_dropdown_content","onKeypress","_component_va_time_picker"],"mappings":"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"}